[{"C:\\Users\\User\\Desktop\\project_money-tracker\\src\\App.js":"1","C:\\Users\\User\\Desktop\\project_money-tracker\\src\\components\\Settings.js":"2","C:\\Users\\User\\Desktop\\project_money-tracker\\src\\components\\ShowCategoryPage.js":"3","C:\\Users\\User\\Desktop\\project_money-tracker\\src\\components\\Category.js":"4","C:\\Users\\User\\Desktop\\project_money-tracker\\src\\components\\TableWiev.js":"5","C:\\Users\\User\\Desktop\\project_money-tracker\\src\\reportWebVitals.js":"6","C:\\Users\\User\\Desktop\\project_money-tracker\\src\\components\\TabWievIncomes.js":"7","C:\\Users\\User\\Desktop\\project_money-tracker\\src\\components\\TabSwich.js":"8","C:\\Users\\User\\Desktop\\project_money-tracker\\src\\components\\AddCategory.js":"9","C:\\Users\\User\\Desktop\\project_money-tracker\\src\\components\\SelectionEl.js":"10"},{"size":178,"mtime":1612029934891,"results":"11","hashOfConfig":"12"},{"size":2055,"mtime":1612077774152,"results":"13","hashOfConfig":"12"},{"size":1783,"mtime":1612121456928,"results":"14","hashOfConfig":"12"},{"size":1108,"mtime":1612077774146,"results":"15","hashOfConfig":"12"},{"size":13486,"mtime":1612121718068,"results":"16","hashOfConfig":"12"},{"size":375,"mtime":1612029934904,"results":"17","hashOfConfig":"12"},{"size":7296,"mtime":1612121791513,"results":"18","hashOfConfig":"12"},{"size":1929,"mtime":1612121657627,"results":"19","hashOfConfig":"12"},{"size":4132,"mtime":1612099051581,"results":"20","hashOfConfig":"12"},{"size":189,"mtime":1612104289466,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ai24rg",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\project_money-tracker\\src\\App.js",[],"C:\\Users\\User\\Desktop\\project_money-tracker\\src\\components\\Settings.js",[],"C:\\Users\\User\\Desktop\\project_money-tracker\\src\\components\\ShowCategoryPage.js",["46","47","48","49","50"],"import React, { Component } from \"react\";\r\nimport \"../css/category_styles.css\";\r\nimport Category from './Category.js';\r\nimport AddCategory from './AddCategory';\r\nimport { BrowserRouter as Router, Link, NavLink, Route } from \"react-router-dom\";\r\n\r\n\r\nclass ShowCategoryPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {categories: this.updateDataFromStorage()}\r\n    }\r\n   \r\n\r\n    updateLocalStorage = () => {\r\n        const local=window.localStorage;\r\n        const table = JSON.stringify (this.state.categories);\r\n        localStorage.setItem('categoryTable', table);\r\n        \r\n    }\r\n\r\n    updateDataFromStorage = () => {\r\n        let data = JSON.parse(localStorage.getItem('categoryTable'));\r\n        if(data === null) {data = []}\r\n        return data\r\n    }   \r\n\r\n    render() {      \r\n        return (            \r\n            <div className=\"Page\">                \r\n                <div className='pageHeader'>\r\n                    <h1 className='pageTitle'>categories</h1>                \r\n                    <Link className= 'btnAdd' to='/categories/AddCategory'>\r\n                            add category\r\n                     </Link>\r\n                </div>                \r\n                <div className='titleRow'>\r\n                    <div className='categoryTitle'>category</div>\r\n                    <div className='descriptionTitle'>description</div>\r\n                    <div className='actionTitle'>action</div>\r\n                </div>\r\n                <div className='catTable'>\r\n                    {this.state.categories.map((category, id) => <Category cat={category} key={category.id} />)}\r\n                </div>                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowCategoryPage;\r\n\r\n","C:\\Users\\User\\Desktop\\project_money-tracker\\src\\components\\Category.js",["51"],"C:\\Users\\User\\Desktop\\project_money-tracker\\src\\components\\TableWiev.js",["52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71"],"import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n// import '../css/style-project.css';\r\nimport \"../css/category_styles.css\";\r\n\r\n\r\nclass TableWiev extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categories: props.data,\r\n            money: '',\r\n            description: '',\r\n            date: '',\r\n            value: '',\r\n            show: false\r\n        };\r\n\r\n        this.handleChangeMoney = this.handleChangeMoney.bind(this);\r\n        this.handleChangeSelect = this.handleChangeSelect.bind(this);\r\n        this.handleChangeDescription = this.handleChangeDescription.bind(this);\r\n        this.handleChangeDate = this.handleChangeDate.bind(this);\r\n        this.sortAZCat = this.sortAZCat.bind(this);\r\n        this.sortAZDesc = this.sortAZDesc.bind(this);\r\n        this.sortAZMoney = this.sortAZMoney.bind(this);\r\n\r\n        this.sortZACat = this.sortZACat.bind(this);\r\n        this.sortZADesc = this.sortZADesc.bind(this);\r\n        this.sortZAMoney = this.sortZAMoney.bind(this);\r\n\r\n        this.filterByCat = this.filterByCat.bind(this);\r\n        this.filterByDesc = this.filterByDesc.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.filterDateDay = this.filterDateDay.bind(this);\r\n        this.filterDateWeek = this.filterDateWeek.bind(this);\r\n        this.filterDateMonth = this.filterDateMonth.bind(this);\r\n        this.filterDateYear = this.filterDateYear.bind(this);\r\n        \r\n        this.filterHalfThousandLess = this.filterHalfThousandLess.bind(this);\r\n        this.filterHalfThousandMore = this.filterHalfThousandMore.bind(this);\r\n        this.filterThousandMore = this.filterThousandMore.bind(this);\r\n\r\n        this.clear = this.clear.bind(this);\r\n        this.addInfoToCategory = this.addInfoToCategory.bind(this);\r\n        this.showInput = this.showInput.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ value: this.state.categories[0].id, money: '0', description: '', date: new Date().toLocaleDateString()});\r\n    }\r\n\r\n    handleChangeMoney(e) {\r\n        e.preventDefault();\r\n        e.target.value = e.target.value.replace(/[^\\d,]/g, '');\r\n        this.setState({ money: e.target.value });\r\n        // this.setState(this.state.categories.money= '')\r\n    }\r\n\r\n    handleChangeDescription(e) {\r\n        this.setState({ description: e.target.value });\r\n    }\r\n\r\n    handleChangeDate(e) {\r\n        this.setState({ date: e.target.value });\r\n        // console.log(this.state.date);\r\n    }\r\n\r\n    handleChangeSelect(e) {\r\n        this.setState({ value: Number(e.target.value) });\r\n    }\r\n\r\n    addInfoToCategory = () => {\r\n        let currentValue = this.state.categories.find(el => el.id === this.state.value);\r\n        let filteredCat = this.state.categories.filter(item => item.id !== this.state.value);\r\n        const newData = {...currentValue, money: `$${this.state.money}`, description: this.state.description, date: this.state.date};\r\n        this.setState({ categories: [...filteredCat, newData ]});\r\n        // console.log(this.state.categories)\r\n        // console.log(this.state);\r\n        localStorage.setItem('categoryTable',JSON.stringify( [...filteredCat, newData ]));\r\n        this.setState({show: false});\r\n    }\r\n\r\n    sortAZCat = () => {\r\n        let arrAZ = this.state.categories.sort((a, b) => a.name.localeCompare(b.name));\r\n        this.setState({categories: [...arrAZ]});\r\n    }\r\n    sortAZDesc = () => {\r\n        let arrAZDesc = this.state.categories.sort((a, b) => a.description.localeCompare(b.description));\r\n        this.setState({categories: [...arrAZDesc]});\r\n    }\r\n    sortAZMoney = () => {\r\n        let arrAZMoney = this.state.categories.sort((a, b) => a.money.localeCompare(b.money));\r\n        this.setState({categories: [...arrAZMoney]});\r\n    }\r\n\r\n    sortZACat = () => {\r\n        const arrZA = this.state.categories.reverse((a, b) => a.name.localeCompare(b.name));\r\n        this.setState({categories: [...arrZA]});\r\n    }\r\n    sortZADesc = () => {\r\n        const arrZADesc = this.state.categories.reverse((a, b) => a.description.localeCompare(b.description));\r\n        this.setState({categories: [...arrZADesc]});\r\n    }\r\n    sortZAMoney = () => {\r\n        const arrZAMoney = this.state.categories.reverse((a, b) => a.money.localeCompare(b.money));\r\n        this.setState({categories: [...arrZAMoney]});\r\n    }\r\n\r\n    filterByCat = () => {\r\n        const filteredByCategory = this.state.categories.filter(item => item.id === this.state.value);\r\n        this.setState({categories: [...filteredByCategory]});\r\n    }\r\n    filterByDesc = () => {\r\n        const filteredByDesc = this.state.categories.filter(item => item.description === this.state.description);\r\n        this.setState({categories: [...filteredByDesc]});\r\n    }\r\n    filterDate = () => {\r\n        const filterByDate = this.state.categories.sort((a, b) => moment(b.date, 'YYYY-MM-DD') - moment(a.date, 'YYYY-MM-DD'));\r\n        this.setState({categories: [...filterByDate]});\r\n    }\r\n    filterDateDay = () => {\r\n        const thisDay = moment();\r\n        const filteredCurrentDay = this.state.categories.filter(item => moment(item.date).isBetween(moment(), thisDay, 'day','[]'));\r\n        this.setState({categories: [...filteredCurrentDay]});\r\n    }\r\n    filterDateWeek = () => {\r\n        const today = moment();\r\n        const sevenDaysBefore = moment().subtract(7, 'days');\r\n        const filterDateByWeek = this.state.categories.filter(item => moment(item.date).isBetween(sevenDaysBefore, today, 'day', '[]'));\r\n        this.setState({categories: [...filterDateByWeek]});\r\n    }\r\n    filterDateMonth = () => {\r\n        let currentMonth = moment();\r\n        let currentMonthBegin = moment().subtract(1, 'months' );\r\n        let filteredMonth = this.state.categories.filter(item => moment(item.date).isBetween(currentMonthBegin, currentMonth, 'day', '[]'));\r\n        this.setState({categories: [...filteredMonth]});\r\n    }\r\n    filterDateYear = () => {\r\n        let currentYear = moment();\r\n        let yearBefore = moment().subtract(1, 'years');\r\n        let filteredYear = this.state.categories.filter(item => moment(item.date).isBetween(yearBefore, currentYear,'day', '[]'));\r\n        this.setState({categories: [...filteredYear]});\r\n    }\r\n    filterHalfThousandLess = () => {\r\n        const filteredByMoney = this.state.categories.filter(item => Number(item.money.slice(1)) <= 500 );\r\n        this.setState({categories: [...filteredByMoney]});\r\n    }\r\n    filterHalfThousandMore = () => {\r\n        const filteredByMoney = this.state.categories.filter(item => Number(item.money.slice(1)) >= 500 );\r\n        this.setState({categories: [...filteredByMoney]});\r\n    }\r\n    filterThousandMore = () => {\r\n        const filteredByMoney = this.state.categories.filter(item => Number(item.money.slice(1)) >= 1000 );\r\n        this.setState({categories: [...filteredByMoney]});\r\n    }\r\n\r\n    clear = () => {\r\n        const prevCat = JSON.parse(localStorage.getItem('categoryTable'));\r\n        this.setState({categories: prevCat})\r\n    }\r\n\r\n    showInput = () => {\r\n        this.setState({show: true});\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <form name='form' className='addCategory'>\r\n                        <p>\r\n\r\n                            <button className= 'btnAddDesc' type=\"button\" onClick={this.showInput}>Edit</button>\r\n                            {this.state.show ? \r\n                            <label className='categoryName'>\r\n                                <p><input className='inpName' type=\"text\" placeholder='Enter money value' onChange={this.handleChangeMoney}></input></p>\r\n                                <p><input className='inpName' type=\"text\" placeholder='Enter description' onChange={this.handleChangeDescription}></input></p>\r\n                                <p><input className='inpName' type=\"date\" placeholder='Choose date' value={this.state.date} onChange={this.handleChangeDate}></input></p>\r\n                                <p><select className='select' value={this.state.value} onChange={(e) => this.handleChangeSelect(e)}>{this.state.categories.map((item) => \r\n                                <option key={item.id} value={item.id}>{item.name}</option>)}</select></p>\r\n                                <button className= 'btnAddDesc' type=\"button\" onClick={this.addInfoToCategory}>Add</button>\r\n                            </label>\r\n                            :\r\n                            null\r\n                            }\r\n                        </p>\r\n                    </form>\r\n                </div>\r\n                <table className=\"Page\">\r\n                    <thead>\r\n                        <tr className='pageHeader'>\r\n                            <div className='underlineRow'>\r\n                            <th className='catHeader'>Category\r\n                                <div className='dropdown'>\r\n                                    <div className='dropbtn'>▼</div>\r\n                                    <div className=\"dropdown-content\">\r\n                                        <a onClick={this.sortAZCat}>Sort A-Z</a>\r\n                                        <a onClick={this.sortZACat}>Sort Z-A</a>\r\n                                        <a onClick={this.filterByCat}>Filter by current category</a>\r\n                                        <a onClick={this.clear}>Clear filter</a>\r\n                                    </div>\r\n                                </div>\r\n                            </th>\r\n                            <th className='descHeader'>Description\r\n                                <div className='dropdown'>\r\n                                    <div className='dropbtn'>▼</div>\r\n                                    <div className=\"dropdown-content\">\r\n                                        <a onClick={this.sortAZDesc}>Sort A-Z</a>\r\n                                        <a onClick={this.sortZADesc}>Sort Z-A</a>\r\n                                        <a onClick={this.filterByDesc}>Filter by current description</a>\r\n                                        <a onClick={this.clear}>Clear filter</a>\r\n                                    </div>\r\n                                </div>\r\n                            </th>\r\n                            <th className='dateHeader'>Date\r\n                            <div className='dropdown'>\r\n                                    <div className='dropbtn'>▼</div>\r\n                                    <div className=\"dropdown-content\">\r\n                                        <a onClick={this.filterDate}>Recent</a>\r\n                                        <a onClick={this.filterDateDay}>This day</a>\r\n                                        <a onClick={this.filterDateWeek}>This week</a>\r\n                                        <a onClick={this.filterDateMonth}>This month</a>\r\n                                        <a onClick={this.filterDateYear}>This year</a>\r\n                                        <a onClick={this.clear}>Clear filter</a>\r\n                                    </div>\r\n                                </div>\r\n                            </th>\r\n                            <th className='moneyHeader'>Money\r\n                                <div className='dropdown'>\r\n                                    <div className='dropbtn'>▼</div>\r\n                                    <div className=\"dropdown-content\">\r\n                                        <a onClick={this.sortAZMoney}>Sort A-Z</a>\r\n                                        <a onClick={this.sortZAMoney}>Sort Z-A</a>\r\n                                        <a onClick={this.filterHalfThousandLess}>Filter by less than 500 </a>\r\n                                        <a onClick={this.filterHalfThousandMore}>Filter by more than 500 </a>\r\n                                        <a onClick={this.filterThousandMore}>Filter by more than 1000 </a>\r\n                                        <a onClick={this.clear}>Clear filter</a>\r\n                                    </div>\r\n                                </div>\r\n                            </th>\r\n                            </div>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=''>\r\n                        {this.state.categories.map((row, index) => {\r\n                            return (\r\n                                <tr className='Row'>\r\n                                    <td>\r\n                                        <div className='cat'>{this.state?.categories[index]?.name}</div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div className='desc'>{this.state?.categories[index]?.description}</div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div className='date'>{this.state?.categories[index]?.date}</div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div className='money'>{this.state?.categories[index]?.money}</div>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableWiev;","C:\\Users\\User\\Desktop\\project_money-tracker\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\project_money-tracker\\src\\components\\TabWievIncomes.js",["72","73","74","75","76","77","78","79","80"],"import React, { Component } from 'react';\r\nimport '../css/style-project.css';\r\n// import \"../css/category_styles.css\";\r\n\r\nclass TableWievIncomes extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categories: props.data,\r\n            money: '',\r\n            value: '',\r\n            show: false\r\n        };\r\n\r\n        this.handleChangeMoney = this.handleChangeMoney.bind(this);\r\n        this.handleChangeTypeInc = this.handleChangeTypeInc.bind(this);\r\n\r\n        this.sortAZType = this.sortAZType.bind(this);\r\n        this.sortAZMoney = this.sortAZMoney.bind(this);\r\n\r\n        this.sortZAType = this.sortZAType.bind(this);\r\n        this.sortZAMoney = this.sortZAMoney.bind(this);\r\n\r\n        this.filterHalfThousandLess = this.filterHalfThousandLess.bind(this);\r\n        this.filterHalfThousandMore = this.filterHalfThousandMore.bind(this);\r\n        this.filterThousandMore = this.filterThousandMore.bind(this);\r\n\r\n        this.addMoneyToTypeInc = this.addMoneyToTypeInc.bind(this);\r\n        this.showInput = this.showInput.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({money: '2500', value: 'Salary Jan.'});\r\n    }\r\n\r\n    handleChangeMoney(e) {\r\n        e.target.value = e.target.value.replace(/[^\\d,]/g, '');\r\n        this.setState({ money: e.target.value});\r\n    }\r\n    handleChangeTypeInc(e) {\r\n        this.setState({value: e.target.value});\r\n    }\r\n    \r\n    addMoneyToTypeInc = () => {\r\n        const newData = {type: this.state.value, money: `$${this.state.money}`};\r\n        // console.log(this.state.value);\r\n        this.setState({ categories: [...this.state.categories, newData ]});\r\n        // console.log(this.state.categories);\r\n        localStorage.setItem('incomesTable',JSON.stringify( [...this.state.categories, newData ]));\r\n        this.setState({show: false});\r\n\r\n    }\r\n\r\n    sortAZType = () => {\r\n        let arrAZInc = this.state.categories.sort((a, b) => a.type.localeCompare(b.type));\r\n        this.setState({categories: [...arrAZInc]});\r\n    }\r\n    \r\n    sortAZMoney = () => {\r\n        let arrAZMoneyInc = this.state.categories.sort((a, b) => a.money.localeCompare(b.money));\r\n        this.setState({categories: [...arrAZMoneyInc]});\r\n    }\r\n\r\n    sortZAType = () => {\r\n        const arrZAInc = this.state.categories.reverse((a, b) => a.type.localeCompare(b.type));\r\n        this.setState({categories: [...arrZAInc]});\r\n    }\r\n    \r\n    sortZAMoney = () => {\r\n        const arrZAMoneyInc = this.state.categories.reverse((a, b) => a.money.localeCompare(b.money));\r\n        this.setState({categories: [...arrZAMoneyInc]});\r\n    }\r\n\r\n\r\n    filterHalfThousandLess = () => {\r\n        const filteredByMoneyInc = this.state.categories.filter(item => Number(item.money.slice(1)) <= 500 );\r\n        this.setState({categories: [...filteredByMoneyInc]});\r\n    }\r\n    filterHalfThousandMore = () => {\r\n        const filteredByMoneyInc = this.state.categories.filter(item => Number(item.money.slice(1)) >= 500 );\r\n        this.setState({categories: [...filteredByMoneyInc]});\r\n    }\r\n    filterThousandMore = () => {\r\n        const filteredByMoneyInc = this.state.categories.filter(item => Number(item.money.slice(1)) >= 1000 );\r\n        this.setState({categories: [...filteredByMoneyInc]});\r\n    }\r\n\r\n    clear = () => {\r\n        const prevCatInc = JSON.parse(localStorage.getItem('incomesTable'));\r\n        this.setState({categories: prevCatInc})\r\n    }\r\n\r\n    showInput = () => {\r\n        this.setState({show: true});\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div >\r\n                <div>\r\n                    <form name='form' className='addCategory'>\r\n                        <p><button className= 'btnAdd' type=\"button\" onClick={this.showInput}>Edit</button></p>\r\n                        {this.state.show ?\r\n                            <label className='categoryName'>\r\n                                <p><input className='inpName' type=\"text\" placeholder='Enter salary, like: Salary Jan.' onChange={this.handleChangeTypeInc}></input></p>\r\n                                <input className='inpName' type=\"text\" placeholder=\"Enter money, like: 2500\" onChange={this.handleChangeMoney}></input>\r\n                                <p><button className= 'btnAdd' type=\"button\" onClick={this.addMoneyToTypeInc}>Add</button></p>\r\n                            </label>\r\n                        :\r\n                        null\r\n                        }\r\n                    </form>\r\n                </div>\r\n                <table className=\"Page\">\r\n                    <thead>\r\n                        <tr className='pageHeader'>\r\n                            <div className='underlineRow'>\r\n                                <th className='typeHeader'>Type\r\n                                    <div className='dropdown'>\r\n                                        <div className='dropbtn'>▼</div>\r\n                                        <div className=\"dropdown-content\">\r\n                                            <a onClick={this.sortAZType}>Sort A-Z</a>\r\n                                            <a onClick={this.sortZAType}>Sort Z-A</a>\r\n                                            <a onClick={this.clear}>Clear filter</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </th>\r\n                                <th className='moneyHeaderInc'>Money\r\n                                <div className='dropdown'>\r\n                                    <div className='dropbtn'>▼</div>\r\n                                        <div className=\"dropdown-content\">\r\n                                            <a onClick={this.sortAZMoney}>Sort A-Z</a>\r\n                                            <a onClick={this.sortZAMoney}>Sort Z-A</a>\r\n                                            <a onClick={this.filterHalfThousandLess}>Filter by less than 500 </a>\r\n                                            <a onClick={this.filterHalfThousandMore}>Filter by more than 500 </a>\r\n                                            <a onClick={this.filterThousandMore}>Filter by more than 1000 </a>\r\n                                            <a onClick={this.clear}>Clear filter</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </th>\r\n                            </div>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.categories?.map((row, index) => {\r\n                            return (\r\n                                <tr className='Row'>\r\n                                    <td>\r\n                                        <div className='type'>{this.state?.categories[index]?.type}</div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div className='moneyInc'>{this.state?.categories[index]?.money}</div>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableWievIncomes;","C:\\Users\\User\\Desktop\\project_money-tracker\\src\\components\\TabSwich.js",["81"],"import React from 'react';\r\nimport SelectionEl from './SelectionEl';\r\nimport TableWiev from './TableWiev';\r\nimport TableWievIncomes from './TabWievIncomes';\r\n\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    NavLink\r\n} from \"react-router-dom\";\r\n\r\nconst categories = [{\r\n    id: 1,\r\n    category: 'Food',\r\n    description: 'Dinner with John',\r\n    date: '26/12/2019',\r\n    // money: ''\r\n},\r\n{\r\n    id: 2,\r\n    category: 'Clothes',\r\n    description: '',\r\n    date: '23/12/2019',\r\n    money: ''\r\n}\r\n];\r\n\r\nconst testIncome = [{\r\n    type: 'Salary',\r\n    money: '$2000'\r\n}]\r\n\r\nconst categoriesArr = JSON.parse(localStorage.getItem('categoryTable'));\r\n// localStorage.setItem('incomesTable',testIncome);        \r\n\r\n// const incomesArr = JSON.parse(localStorage.getItem('incomesTable'));\r\n\r\nfunction TabSwich() {\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <div className=\"tabbar\">\r\n                    <div className=\"tabbar-item\">\r\n                        <NavLink to=\"/\">Charges</NavLink>\r\n                    </div>\r\n                    <div className=\"tabbar-item\">\r\n                        <NavLink to=\"/incomes\" >Incomes</NavLink>\r\n                    </div>\r\n                </div>\r\n                <SelectionEl />\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <div>\r\n                            <h2 >Charges</h2>\r\n                        </div>\r\n                        <TableWiev data={categoriesArr} typeWiev=\"Charges\" />\r\n                    </Route>\r\n                    <Route exact path=\"/incomes\">\r\n                        <div>\r\n                            <h2 >Incomes</h2>\r\n                        </div>\r\n                        <TableWievIncomes data={testIncome} typeWiev=\"Incomes\" />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TabSwich;","C:\\Users\\User\\Desktop\\project_money-tracker\\src\\components\\AddCategory.js",["82","83","84","85","86"],"C:\\Users\\User\\Desktop\\project_money-tracker\\src\\components\\SelectionEl.js",[],{"ruleId":"87","severity":1,"message":"88","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":19},{"ruleId":"87","severity":1,"message":"91","line":5,"column":27,"nodeType":"89","messageId":"90","endLine":5,"endColumn":33},{"ruleId":"87","severity":1,"message":"92","line":5,"column":41,"nodeType":"89","messageId":"90","endLine":5,"endColumn":48},{"ruleId":"87","severity":1,"message":"93","line":5,"column":50,"nodeType":"89","messageId":"90","endLine":5,"endColumn":55},{"ruleId":"87","severity":1,"message":"94","line":17,"column":15,"nodeType":"89","messageId":"90","endLine":17,"endColumn":20},{"ruleId":"87","severity":1,"message":"95","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":10},{"ruleId":"96","severity":1,"message":"97","line":199,"column":41,"nodeType":"98","endLine":199,"endColumn":69},{"ruleId":"96","severity":1,"message":"97","line":200,"column":41,"nodeType":"98","endLine":200,"endColumn":69},{"ruleId":"96","severity":1,"message":"97","line":201,"column":41,"nodeType":"98","endLine":201,"endColumn":71},{"ruleId":"96","severity":1,"message":"97","line":202,"column":41,"nodeType":"98","endLine":202,"endColumn":65},{"ruleId":"96","severity":1,"message":"97","line":210,"column":41,"nodeType":"98","endLine":210,"endColumn":70},{"ruleId":"96","severity":1,"message":"97","line":211,"column":41,"nodeType":"98","endLine":211,"endColumn":70},{"ruleId":"96","severity":1,"message":"97","line":212,"column":41,"nodeType":"98","endLine":212,"endColumn":72},{"ruleId":"96","severity":1,"message":"97","line":213,"column":41,"nodeType":"98","endLine":213,"endColumn":65},{"ruleId":"96","severity":1,"message":"97","line":221,"column":41,"nodeType":"98","endLine":221,"endColumn":70},{"ruleId":"96","severity":1,"message":"97","line":222,"column":41,"nodeType":"98","endLine":222,"endColumn":73},{"ruleId":"96","severity":1,"message":"97","line":223,"column":41,"nodeType":"98","endLine":223,"endColumn":74},{"ruleId":"96","severity":1,"message":"97","line":224,"column":41,"nodeType":"98","endLine":224,"endColumn":75},{"ruleId":"96","severity":1,"message":"97","line":225,"column":41,"nodeType":"98","endLine":225,"endColumn":74},{"ruleId":"96","severity":1,"message":"97","line":226,"column":41,"nodeType":"98","endLine":226,"endColumn":65},{"ruleId":"96","severity":1,"message":"97","line":234,"column":41,"nodeType":"98","endLine":234,"endColumn":71},{"ruleId":"96","severity":1,"message":"97","line":235,"column":41,"nodeType":"98","endLine":235,"endColumn":71},{"ruleId":"96","severity":1,"message":"97","line":236,"column":41,"nodeType":"98","endLine":236,"endColumn":82},{"ruleId":"96","severity":1,"message":"97","line":237,"column":41,"nodeType":"98","endLine":237,"endColumn":82},{"ruleId":"96","severity":1,"message":"97","line":238,"column":41,"nodeType":"98","endLine":238,"endColumn":78},{"ruleId":"96","severity":1,"message":"97","line":239,"column":41,"nodeType":"98","endLine":239,"endColumn":65},{"ruleId":"96","severity":1,"message":"97","line":125,"column":45,"nodeType":"98","endLine":125,"endColumn":74},{"ruleId":"96","severity":1,"message":"97","line":126,"column":45,"nodeType":"98","endLine":126,"endColumn":74},{"ruleId":"96","severity":1,"message":"97","line":127,"column":45,"nodeType":"98","endLine":127,"endColumn":69},{"ruleId":"96","severity":1,"message":"97","line":135,"column":45,"nodeType":"98","endLine":135,"endColumn":75},{"ruleId":"96","severity":1,"message":"97","line":136,"column":45,"nodeType":"98","endLine":136,"endColumn":75},{"ruleId":"96","severity":1,"message":"97","line":137,"column":45,"nodeType":"98","endLine":137,"endColumn":86},{"ruleId":"96","severity":1,"message":"97","line":138,"column":45,"nodeType":"98","endLine":138,"endColumn":86},{"ruleId":"96","severity":1,"message":"97","line":139,"column":45,"nodeType":"98","endLine":139,"endColumn":82},{"ruleId":"96","severity":1,"message":"97","line":140,"column":45,"nodeType":"98","endLine":140,"endColumn":69},{"ruleId":"87","severity":1,"message":"99","line":14,"column":7,"nodeType":"89","messageId":"90","endLine":14,"endColumn":17},{"ruleId":"87","severity":1,"message":"100","line":7,"column":8,"nodeType":"89","messageId":"90","endLine":7,"endColumn":16},{"ruleId":"87","severity":1,"message":"91","line":8,"column":27,"nodeType":"89","messageId":"90","endLine":8,"endColumn":33},{"ruleId":"87","severity":1,"message":"101","line":8,"column":35,"nodeType":"89","messageId":"90","endLine":8,"endColumn":39},{"ruleId":"87","severity":1,"message":"92","line":8,"column":41,"nodeType":"89","messageId":"90","endLine":8,"endColumn":48},{"ruleId":"87","severity":1,"message":"93","line":8,"column":50,"nodeType":"89","messageId":"90","endLine":8,"endColumn":55},"no-unused-vars","'AddCategory' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'NavLink' is defined but never used.","'Route' is defined but never used.","'local' is assigned a value but never used.","'ic' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'categories' is assigned a value but never used.","'IconList' is defined but never used.","'Link' is defined but never used."]